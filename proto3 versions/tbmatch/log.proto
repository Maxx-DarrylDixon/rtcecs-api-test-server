syntax = "proto3";
// For reporting and aggregating log messages pertaining to matches.

package tbmatch;

// This represents a single log message generated by an application pertaining to some entity.
//   e.g.: One log message from Portal for a given Match.
message LogMessage {
	// The type of entity to which the log message pertains
	enum EntityType {
		ENTITY_TYPE_ZERO = 0;
		// An online match
		MATCH = 1;
	}

	// Information about the originator of the log message
	message Source {
		// The name of the application that generated the message.
		string application = 1;

		// The IP address or hostname of the machine from which the message originated.
		string address = 2;
	}

      // The various possible log levels
	enum Priority {
		PRIORITY_ZERO = 0;
		// The application will probably terminate after this message is logged.
		FATAL = 1;

		// An error was encountered, but the application will resume.
		ERROR = 2;

		// Something unexpected or noteworthy occurred that didn't break anything.
		INFO = 3;

		// Verbose log entries, debug information, etc.
		TRIVIA = 4;
	}

	// The timestamp at which this message was generated.
	int64 timestamp_msec = 1;

	// The log or debug message.
	string message = 2;

	// The log level of the message.
	Priority priority = 3;

	// The source of the log message.
	Source source = 4;
}